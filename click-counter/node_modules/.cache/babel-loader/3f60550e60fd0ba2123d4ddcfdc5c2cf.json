{"ast":null,"code":"import _classCallCheck from\"/Users/Thrace/Projects/Testing-Examples/click-counter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Thrace/Projects/Testing-Examples/click-counter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/Thrace/Projects/Testing-Examples/click-counter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/Thrace/Projects/Testing-Examples/click-counter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/Thrace/Projects/Testing-Examples/click-counter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./App.css';var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={counter:0,error:false};// need to bind this for decrementCounter and incrementCounter since\n// they use this.state and this.setState\n_this.decrementCounter=_this.decrementCounter.bind(_assertThisInitialized(_this));_this.incrementCounter=_this.incrementCounter.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"decrementCounter\",value:function decrementCounter(){if(this.state.counter===0){this.setState({error:true});}else{this.setState({counter:this.state.counter-1});}}},{key:\"incrementCounter\",value:function incrementCounter(){if(this.state.error){this.setState({error:false});}this.setState({counter:this.state.counter+1});}},{key:\"render\",value:function render(){// determine whether error is hidden based on state\nvar errorClass=this.state.error?'':'hidden';return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"The counter is currently \",this.state.counter),/*#__PURE__*/React.createElement(\"div\",{className:\"error \".concat(errorClass)},\"The counter cannot go below 0\"),/*#__PURE__*/React.createElement(\"button\",{onClick:this.incrementCounter},\"Increment counter\"),/*#__PURE__*/React.createElement(\"button\",{onClick:this.decrementCounter},\"Decrement counter\"));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/Thrace/Projects/Testing-Examples/click-counter/src/App.js"],"names":["React","Component","App","props","state","counter","error","decrementCounter","bind","incrementCounter","setState","errorClass"],"mappings":"41BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,WAAP,C,GAEMC,CAAAA,G,0FACJ,aAAYC,KAAZ,CAAmB,qCACjB,uBAAMA,KAAN,EAEA,MAAKC,KAAL,CAAa,CACXC,OAAO,CAAE,CADE,CAEXC,KAAK,CAAE,KAFI,CAAb,CAKA;AACA;AACA,MAAKC,gBAAL,CAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,+BAAxB,CACA,MAAKC,gBAAL,CAAwB,MAAKA,gBAAL,CAAsBD,IAAtB,+BAAxB,CAXiB,aAYlB,C,2EAEkB,CACjB,GAAG,KAAKJ,KAAL,CAAWC,OAAX,GAAuB,CAA1B,CAA6B,CAC3B,KAAKK,QAAL,CAAc,CAAEJ,KAAK,CAAE,IAAT,CAAd,EACD,CAFD,IAEO,CACL,KAAKI,QAAL,CAAc,CAAEL,OAAO,CAAE,KAAKD,KAAL,CAAWC,OAAX,CAAqB,CAAhC,CAAd,EACD,CACF,C,2DAEkB,CACjB,GAAG,KAAKD,KAAL,CAAWE,KAAd,CAAqB,CACnB,KAAKI,QAAL,CAAc,CAAEJ,KAAK,CAAE,KAAT,CAAd,EACD,CACD,KAAKI,QAAL,CAAc,CAAEL,OAAO,CAAE,KAAKD,KAAL,CAAWC,OAAX,CAAqB,CAAhC,CAAd,EACD,C,uCAEQ,CACN;AACA,GAAMM,CAAAA,UAAU,CAAG,KAAKP,KAAL,CAAWE,KAAX,CAAmB,EAAnB,CAAwB,QAA3C,CAED,mBACE,4CACE,0DAA0D,KAAKF,KAAL,CAAWC,OAArE,CADF,cAEE,2BAA+B,SAAS,iBAAWM,UAAX,CAAxC,kCAFF,cAKE,8BAEE,OAAO,CAAE,KAAKF,gBAFhB,sBALF,cAYE,8BAEE,OAAO,CAAE,KAAKF,gBAFhB,sBAZF,CADF,CAsBD,C,iBAxDeN,S,EA2DlB,cAAeC,CAAAA,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props) \n\n    this.state = {\n      counter: 0, \n      error: false,\n    }\n\n    // need to bind this for decrementCounter and incrementCounter since\n    // they use this.state and this.setState\n    this.decrementCounter = this.decrementCounter.bind(this)\n    this.incrementCounter = this.incrementCounter.bind(this)\n  }\n\n  decrementCounter() {\n    if(this.state.counter === 0) {\n      this.setState({ error: true })\n    } else {\n      this.setState({ counter: this.state.counter - 1 })\n    }\n  }\n\n  incrementCounter() {\n    if(this.state.error) {\n      this.setState({ error: false })\n    }\n    this.setState({ counter: this.state.counter + 1 })\n  }\n\n  render() {\n     // determine whether error is hidden based on state\n     const errorClass = this.state.error ? '' : 'hidden'\n\n    return (\n      <div data-test=\"component-app\">\n        <h1 data-test=\"counter-display\">The counter is currently {this.state.counter}</h1>\n        <div data-test=\"error-message\" className={`error ${errorClass}`}>\n          The counter cannot go below 0\n        </div>\n        <button \n          data-test=\"increment-button\"\n          onClick={this.incrementCounter}\n          >\n          Increment counter\n        </button>\n\n        <button\n          data-test=\"decrement-button\"\n          onClick={this.decrementCounter}\n        >\n          Decrement counter\n        </button>  \n\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}