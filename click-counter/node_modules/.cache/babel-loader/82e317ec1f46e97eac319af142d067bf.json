{"ast":null,"code":"var _jsxFileName = \"/Users/Thrace/Projects/Testing-Examples/click-counter/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      error: false\n    }; // need to bind this for decrementCounter and incrementCounter since\n    // they use this.state and this.setState\n\n    this.decrementCounter = this.decrementCounter.bind(this);\n    this.incrementCounter = this.incrementCounter.bind(this);\n  }\n\n  decrementCounter() {\n    if (this.state.counter === 0) {\n      this.setState({\n        error: true\n      });\n    } else {\n      this.setState({\n        counter: this.state.counter - 1\n      });\n    }\n  }\n\n  incrementCounter() {\n    if (this.state.error) {\n      this.setState({\n        error: false\n      });\n    }\n\n    this.setState({\n      counter: this.state.counter + 1\n    });\n  }\n\n  render() {\n    // determine whether error is hidden based on state\n    const errorClass = this.state.error ? '' : 'hidden';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": \"component-app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-test\": \"counter-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"The counter is currently \", this.state.counter), /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": \"error-message\",\n      className: `error ${errorClass}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"The counter cannot go below 0\"), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-test\": \"increment-button\",\n      onClick: this.incrementCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"Increment counter\"), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-test\": \"decrement-button\",\n      onClick: this.decrementCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"Decrement counter\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Thrace/Projects/Testing-Examples/click-counter/src/App.js"],"names":["React","Component","App","constructor","props","state","counter","error","decrementCounter","bind","incrementCounter","setState","render","errorClass"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CADE;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb,CAHiB,CAQjB;AACA;;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDD,EAAAA,gBAAgB,GAAG;AACjB,QAAG,KAAKH,KAAL,CAAWC,OAAX,KAAuB,CAA1B,EAA6B;AAC3B,WAAKK,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KAFD,MAEO;AACL,WAAKI,QAAL,CAAc;AAAEL,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AAAhC,OAAd;AACD;AACF;;AAEDI,EAAAA,gBAAgB,GAAG;AACjB,QAAG,KAAKL,KAAL,CAAWE,KAAd,EAAqB;AACnB,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD;;AACD,SAAKI,QAAL,CAAc;AAAEL,MAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AAAhC,KAAd;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACN;AACA,UAAMC,UAAU,GAAG,KAAKR,KAAL,CAAWE,KAAX,GAAmB,EAAnB,GAAwB,QAA3C;AAED,wBACE;AAAK,mBAAU,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,mBAAU,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA0D,KAAKF,KAAL,CAAWC,OAArE,CADF,eAEE;AAAK,mBAAU,eAAf;AAA+B,MAAA,SAAS,EAAG,SAAQO,UAAW,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFF,eAKE;AACE,mBAAU,kBADZ;AAEE,MAAA,OAAO,EAAE,KAAKH,gBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BALF,eAYE;AACE,mBAAU,kBADZ;AAEE,MAAA,OAAO,EAAE,KAAKF,gBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAZF,CADF;AAsBD;;AAxDyB;;AA2D5B,eAAeN,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props) \n\n    this.state = {\n      counter: 0, \n      error: false,\n    }\n\n    // need to bind this for decrementCounter and incrementCounter since\n    // they use this.state and this.setState\n    this.decrementCounter = this.decrementCounter.bind(this)\n    this.incrementCounter = this.incrementCounter.bind(this)\n  }\n\n  decrementCounter() {\n    if(this.state.counter === 0) {\n      this.setState({ error: true })\n    } else {\n      this.setState({ counter: this.state.counter - 1 })\n    }\n  }\n\n  incrementCounter() {\n    if(this.state.error) {\n      this.setState({ error: false })\n    }\n    this.setState({ counter: this.state.counter + 1 })\n  }\n\n  render() {\n     // determine whether error is hidden based on state\n     const errorClass = this.state.error ? '' : 'hidden'\n\n    return (\n      <div data-test=\"component-app\">\n        <h1 data-test=\"counter-display\">The counter is currently {this.state.counter}</h1>\n        <div data-test=\"error-message\" className={`error ${errorClass}`}>\n          The counter cannot go below 0\n        </div>\n        <button \n          data-test=\"increment-button\"\n          onClick={this.incrementCounter}\n          >\n          Increment counter\n        </button>\n\n        <button\n          data-test=\"decrement-button\"\n          onClick={this.decrementCounter}\n        >\n          Decrement counter\n        </button>  \n\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}